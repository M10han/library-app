{"ast":null,"code":"var _jsxFileName = \"/Users/mohannoolu/Desktop/ReactOnDjangoAPI/client/src/components/SearchBarComponent.jsx\";\nimport React, { Component } from 'react';\nimport NamesContainer from './NamesContainer';\nimport Library from '../api/Library.js';\n\nclass SearchBarComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.retrieveData = () => {\n      Library.executeLibraryService().then(res => {\n        const booksData = res.data;\n        var books = booksData.map(({\n          title\n        }) => title);\n        this.setState({\n          names: books\n        });\n      });\n    };\n\n    this.editSearchTerm = e => {\n      this.setState({\n        searchTerm: e.target.value\n      });\n    };\n\n    this.dynamicSearch = () => {\n      return this.state.names.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\n    };\n\n    this.state = {\n      names: [],\n      searchTerm: ''\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        paddingTop: '2vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.searchTerm,\n      onChange: this.editSearchTerm,\n      placeholder: \"Search for a book\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NamesContainer, {\n      names: this.dynamicSearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/mohannoolu/Desktop/ReactOnDjangoAPI/client/src/components/SearchBarComponent.jsx"],"names":["React","Component","NamesContainer","Library","SearchBarComponent","constructor","props","retrieveData","executeLibraryService","then","res","booksData","data","books","map","title","setState","names","editSearchTerm","e","searchTerm","target","value","dynamicSearch","state","filter","name","toLowerCase","includes","componentDidMount","render","textAlign","paddingTop","SearchBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,kBAAN,SAAiCH,SAAjC,CAA0C;AAEtCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,YATkB,GASH,MAAM;AACjBJ,MAAAA,OAAO,CAACK,qBAAR,GACCC,IADD,CACMC,GAAG,IAAI;AACT,cAAMC,SAAS,GAAGD,GAAG,CAACE,IAAtB;AACA,YAAIC,KAAK,GAAGF,SAAS,CAACG,GAAV,CAAc,CAAC;AAACC,UAAAA;AAAD,SAAD,KAAaA,KAA3B,CAAZ;AACA,aAAKC,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAEJ;AADG,SAAd;AAGH,OAPD;AAQH,KAlBiB;;AAAA,SAoBlBK,cApBkB,GAoBAC,CAAD,IAAO;AACpB,WAAKH,QAAL,CAAc;AAACI,QAAAA,UAAU,EAAED,CAAC,CAACE,MAAF,CAASC;AAAtB,OAAd;AACH,KAtBiB;;AAAA,SAwBlBC,aAxBkB,GAwBF,MAAM;AAClB,aAAO,KAAKC,KAAL,CAAWP,KAAX,CAAiBQ,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4B,KAAKJ,KAAL,CAAWJ,UAAX,CAAsBO,WAAtB,EAA5B,CAAhC,CAAP;AACH,KA1BiB;;AAGd,SAAKH,KAAL,GAAa;AACTP,MAAAA,KAAK,EAAE,EADE;AAETG,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAqBDS,EAAAA,iBAAiB,GAAG;AAChB,SAAKtB,YAAL;AACH;;AAEDuB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC,QAAX;AAAqBC,QAAAA,UAAU,EAAC;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAI,KAAKR,KAAL,CAAWJ,UAAvC;AAAmD,MAAA,QAAQ,EAAI,KAAKF,cAApE;AAAoF,MAAA,WAAW,EAAC,mBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAI,KAAKK,aAAL,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzCqC;;AA4C1C,eAAeU,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport NamesContainer from './NamesContainer'\nimport Library from '../api/Library.js'\n\nclass SearchBarComponent extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            names: [],\n            searchTerm: ''\n        }\n    }\n\n    retrieveData = () => {\n        Library.executeLibraryService()\n        .then(res => {\n            const booksData = res.data\n            var books = booksData.map(({title}) => title)\n            this.setState({\n                names: books\n            })\n        })\n    }\n\n    editSearchTerm = (e) => {\n        this.setState({searchTerm: e.target.value})\n    }\n\n    dynamicSearch = () => {\n        return this.state.names.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n    }\n\n    componentDidMount() {\n        this.retrieveData()\n    }\n\n    render(){\n        return(\n            <div style={{textAlign:'center', paddingTop:'2vh'}}>\n                <input type=\"text\" value = {this.state.searchTerm} onChange = {this.editSearchTerm} placeholder=\"Search for a book\"/>\n                <NamesContainer names = {this.dynamicSearch()}/>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}